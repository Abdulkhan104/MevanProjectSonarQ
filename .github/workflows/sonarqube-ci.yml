name: Maven Build & SonarQube

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-sonar:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better SCM blame info in SonarQube

      # 2. Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Maven Clean
      - name: Maven Clean
        run: mvn clean -B

      # 5. Run SonarQube Analysis (with verify for build + test)
      - name: Run SonarQube Analysis
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=MevanProjectSonarQ -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # 6. Install jq and curl for JSON parsing and API calls
      - name: Install jq and curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      # 7. Wait and check SonarQube Quality Gate
      - name: Check SonarQube Quality Gate
        run: |
          echo "⏳ Waiting for SonarQube Quality Gate..."
          
          PROJECT_KEY="MevanProjectSonarQ"
          SONAR_HOST_URL="${{ secrets.SONAR_HOST_URL }}"
          SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"
          MAX_RETRIES=10
          RETRY_DELAY=10
          STATUS="PENDING"
          COUNT=0

          while [[ "$STATUS" == "PENDING" && $COUNT -lt $MAX_RETRIES ]]; do
            sleep $RETRY_DELAY
            STATUS=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$PROJECT_KEY" \
              | jq -r '.projectStatus.status')
            echo "Attempt $((COUNT+1)): Quality Gate Status = $STATUS"
            COUNT=$((COUNT+1))
          done

          if [[ -z "$STATUS" || "$STATUS" != "OK" ]]; then
            echo "❌ Quality Gate failed or status not retrieved!"
            exit 1
          else
            echo "✅ Quality Gate Passed!"
          fi
